openapi: 3.0.0
info:
  title: Gear Globe API
  description: Gear Globe API
  version: 1.0.0
tags:
  - name: Offer
    description: Offer API
  - name: Client
    description: Client API
servers:
  - url: http://localhost:8080


paths:
  /api/offers:
    get:
      tags:
        - Offer
      summary: Get all offers
      operationId: getAllOffers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OfferResponse'
    post:
      tags:
        - Offer
      summary: Create offer
      operationId: createOffer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOfferRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/offers/{id}:
    get:
      tags:
        - Offer
      summary: Get offer by ID
      operationId: getOfferById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Offer
      summary: Update offer by ID
      operationId: updateOfferById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Offer
      summary: Archive offer by ID
      operationId: archiveOfferById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferIdResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/clients:
    get:
      tags:
        - Client
      summary: Get all clients
      operationId: getAllClients
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientResponse'
    post:
      tags:
        - Client
      summary: Create client
      operationId: createClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/clients/{id}:
    get:
      tags:
        - Client
      summary: Get client by ID
      operationId: getClientById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Client
      summary: Update client by ID
      operationId: updateClientById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Client
      summary: Deactivate client by ID
      operationId: deactivateClientById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientIdResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/clients/{id}/address:
    patch:
      tags:
        - Client
      summary: Update client's address by ID
      operationId: updateClientAddress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddressRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/clients/{id}/password:
    patch:
      tags:
        - Client
      summary: Change client's password by ID
      operationId: changeClientPassword
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientIdResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    OfferResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mark:
          type: string
        productionYear:
          type: integer
          format: int64
        millage:
          type: integer
          format: int64
        engineCapacity:
          type: number
          format: double
        description:
          type: string
        price:
          type: number
          format: double
        createDate:
          type: string
          format: date-time
        modifiedDate:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/OfferStatus'
    OfferStatus:
      type: string
      enum:
        - ACTIVE
        - ARCHIVE
    OfferIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
    CreateOfferRequest:
      type: object
      required:
        - mark
        - productionYear
        - millage
        - engineCapacity
        - description
        - price
      properties:
        mark:
          type: string
        productionYear:
          type: integer
          format: int64
        millage:
          type: integer
          format: int64
        engineCapacity:
          type: number
          format: double
        description:
          type: string
        price:
          type: number
          format: double
    UpdateOfferRequest:
      type: object
      properties:
        mark:
          type: string
        productionYear:
          type: integer
          format: int64
        millage:
          type: integer
          format: int64
        engineCapacity:
          type: number
          format: double
        description:
          type: string
        price:
          type: number
          format: double
    ClientResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastName:
          type: string
        clientType:
          $ref: '#/components/schemas/ClientType'
        birthDate:
          type: string
          format: date
        email:
          type: string
        phoneNumber:
          type: string
        address:
          $ref: '#/components/schemas/AddressResponse'
        clientRole:
          $ref: '#/components/schemas/ClientRole'
        clientStatus:
          $ref: '#/components/schemas/ClientStatus'
    ClientIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
    CreateClientRequest:
      type: object
      required:
        - name
        - clientType
        - email
        - phoneNumber
        - address
        - password
      properties:
        name:
          type: string
        lastName:
          type: string
        clientType:
          $ref: '#/components/schemas/ClientType'
        birthDate:
          type: string
          format: date
        email:
          type: string
        phoneNumber:
          type: string
        address:
          $ref: '#/components/schemas/CreateAddressRequest'
        password:
          type: string
    UpdateClientRequest:
      type: object
      properties:
        name:
          type: string
        lastName:
          type: string
        clientType:
          $ref: '#/components/schemas/ClientType'
        birthDate:
          type: string
          format: date
        email:
          type: string
        phoneNumber:
          type: string
    AddressResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        city:
          type: string
        street:
          type: string
        houseNumber:
          type: string
        apartmentNumber:
          type: string
        country:
          type: string
    CreateAddressRequest:
      type: object
      required:
        - city
        - street
        - houseNumber
        - country
      properties:
        city:
          type: string
        street:
          type: string
        houseNumber:
          type: string
        apartmentNumber:
          type: string
        country:
          type: string
    UpdateAddressRequest:
      type: object
      properties:
        city:
          type: string
        street:
          type: string
        houseNumber:
          type: string
        apartmentNumber:
          type: string
        country:
          type: string
    UpdatePasswordRequest:
      type: object
      required:
        - oldPassword
        - newPassword
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
    ClientStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - SUSPENDED
    ClientType:
      type: string
      enum:
        - PERSON
        - COMPANY
    ClientRole:
      type: string
      enum:
        - CLIENT
        - ADMIN
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string